=== tests/cases/conformance/salsa/index.js ===
/// <reference path='./types.d.ts'/>
const C = require("./semver")
>C : { (): void; f: (n: any) => any; }
>require("./semver") : { (): void; f: (n: any) => any; }
>require : any
>"./semver" : "./semver"

var two = C.f(1)
>two : any
>C.f(1) : any
>C.f : (n: any) => any
>C : { (): void; f: (n: any) => any; }
>f : (n: any) => any
>1 : 1

=== tests/cases/conformance/salsa/types.d.ts ===
declare var require: any;
>require : any

declare var module: any;
>module : any

=== tests/cases/conformance/salsa/semver.js ===
/// <reference path='./types.d.ts'/>
exports = module.exports = C
>exports = module.exports = C : { (): void; f: (n: any) => any; }
>exports : any
>module.exports = C : { (): void; f: (n: any) => any; }
>module.exports : any
>module : any
>exports : any
>C : { (): void; f: (n: any) => any; }

C.f = n => n + 1
>C.f = n => n + 1 : (n: any) => any
>C.f : (n: any) => any
>C : { (): void; f: (n: any) => any; }
>f : (n: any) => any
>n => n + 1 : (n: any) => any
>n : any
>n + 1 : any
>n : any
>1 : 1

function C() {
>C : { (): void; f: (n: any) => any; }

    this.p = 1
>this.p = 1 : 1
>this.p : any
>this : any
>p : any
>1 : 1
}
